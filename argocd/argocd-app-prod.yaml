apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: proyecto-kubernetes-prod
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argocd.argoproj.io
  annotations:
    # Configurar notificaciones para diferentes eventos
    notifications.argoproj.io/subscribe.on-sync-succeeded.slack: '#deployments-prod'
    notifications.argoproj.io/subscribe.on-sync-failed.slack: '#deployments-prod'
    notifications.argoproj.io/subscribe.on-health-degraded.slack: '#deployments-prod'
    notifications.argoproj.io/subscribe.on-deployment-detected.slack: '#deployments-prod'
    
    # Webhook triggers para CD en producción
    argocd.argoproj.io/sync-options: Prune=true
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: https://github.com/JuanMaFraile/ProyectoKubernetes.git
    targetRevision: main
    path: helm
    helm:
      valueFiles:
        - values.yaml
      parameters:
        - name: image.repository
          value: santiadi/grupojava
        - name: image.tag
          value: stable
        - name: replicaCount
          value: "5"
        - name: service.type
          value: LoadBalancer
        - name: ingress.enabled
          value: "true"
  destination:
    server: https://kubernetes.default.svc
    namespace: production
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      # Configurar triggers para CD en producción
      syncOptions:
        - CreateNamespace=true
        - PrunePropagationPolicy=foreground
        - PruneLast=true
        - RespectIgnoreDifferences=true
    # Configurar webhook triggers
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m 