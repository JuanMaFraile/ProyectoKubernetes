apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  # Configuraci√≥n de servicios de notificaci√≥n
  service.slack: |
    token: $slack-token
    channel: '#deployments'
  
  service.email: |
    host: smtp.gmail.com
    port: 587
    username: $email-username
    password: $email-password
    from: $email-from
  
  # Templates para diferentes eventos
  template.app-sync-succeeded: |
    message: |
      ‚úÖ **Aplicaci√≥n sincronizada exitosamente**
      **Aplicaci√≥n**: {{.app.metadata.name}}
      **Entorno**: {{.app.spec.destination.namespace}}
      **Revisi√≥n**: {{.app.status.sync.revision}}
      **Timestamp**: {{.app.status.sync.finishedAt}}
  
  template.app-sync-failed: |
    message: |
      ‚ùå **Error en sincronizaci√≥n de aplicaci√≥n**
      **Aplicaci√≥n**: {{.app.metadata.name}}
      **Entorno**: {{.app.spec.destination.namespace}}
      **Error**: {{.app.status.conditions}}
      **Timestamp**: {{.app.status.operationState.finishedAt}}
  
  template.app-health-degraded: |
    message: |
      ‚ö†Ô∏è **Aplicaci√≥n con estado degradado**
      **Aplicaci√≥n**: {{.app.metadata.name}}
      **Entorno**: {{.app.spec.destination.namespace}}
      **Estado**: {{.app.status.health.status}}
      **Mensaje**: {{.app.status.health.message}}
  
  template.deployment-detected: |
    message: |
      üöÄ **Nuevo despliegue detectado**
      **Aplicaci√≥n**: {{.app.metadata.name}}
      **Imagen**: {{.app.spec.source.helm.parameters}}
      **Entorno**: {{.app.spec.destination.namespace}}
      **Trigger**: Webhook/CD Pipeline

---
apiVersion: v1
kind: Secret
metadata:
  name: argocd-notifications-secret
  namespace: argocd
type: Opaque
stringData:
  # Configurar estas variables con valores reales
  slack-token: "xoxb-your-slack-token"
  email-username: "your-email@gmail.com"
  email-password: "your-app-password"
  email-from: "argocd@yourcompany.com" 